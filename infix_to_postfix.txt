// infix to postfix
#include <iostream>
#include <string>
#include <stack>
using namespace std;
int prec(char c) {
    if (c == '^')
        return 3;
    else if (c == '/'  c == '*')
        return 2;
    else if (c == '+'  c == '-')
        return 1;
    else
        return -1;
}

string infixToPostfix(string s){
    stack <char> st;
    string res;
    for(int i =0;i<s.size();i++){
        if((s[i] >= 'a' && s[i] <= 'z')  (s[i] >= 'A' && s[i] <= 'Z')  (s[i] >= '0' && s[i] <= '9')){
            res += s[i];
        }
        else if(s[i] == '('){
            st.push(s[i]);
        }
        else if(s[i] == ')'){
            while(!st.empty() && st.top() != '('){
                res += st.top();
                st.pop();
            }
            if(!st.empty()){
                st.pop();
            }
        }
        else{
            while(!st.empty() && prec(st.top()) >= prec(s[i])){
                res += st.top();
                st.pop();
            }
            st.push(s[i]);
        }
    }
    while(!st.empty()){
        res += st.top();
        st.pop();
    }
    return res;
}

int postfixeval(string s){
    stack<int>st;
    for(int i =0;i<s.size();i++){
        if(s[i] >= '0' && s[i] <= '9'){
            st.push(s[i] - '0');
        }
        else{
            int b = st.top();
            st.pop();
            int a = st.top();
            st.pop();
            if(s[i] == '+'){
                st.push(a + b);
            }
            else if(s[i] == '-'){
                st.push(a - b);
            }
            else if(s[i] == '*'){
                st.push(a * b);
            }
            else if(s[i] == '/'){
                st.push(a / b);
            }
        }
    }
    return st.top();
}


int main() {
    string exp = "(4/2)";
    string s = infixToPostfix(exp);
    cout<<s;
    cout<<endl;
    cout<<postfixeval(s);
    

    return 0;
}